Without being dedicated to a single Scrum it is unlikely the developer will have the time to cross-skill into new technologies and conversely, will have almost no time to be able to cross-skill or pair program with anyone else to coach them into a cross-skilled state In addition you can ask the team to volunteer for actions in order to drive through the change and own the team's improvement. TL:DR Considerations I know the temptation for some may be to fixate on the "Scrum did not work part" or the "developer is unhappy part" of the question but I gave that information for context. I feel confident in turning around the morale of the team and improving each individual's self worth. I am keen to explore whether a former Scrum team can survive when each developer is allowed to gather / re-prioritise requirements alongside a Product Owner. Our Sprint Planning Agenda is as follows (feel free to steal) The senior Product Owner would still decide the priority of the projects coming into the environment but the developers would be responsible for the priority of tasks within each project in conjunction with a PM/Deputy PO. With his/her time split across multiple teams it is unlikely that either team will be able to give honest feedback to the developer and the very real risk is that both teams feel unsupported and the developer is provided with negative feedback which is reflected in performance related appraisals, bonuses etc. It's important to consider that the needs of the Scrum Team may not be in line with the career aspirations of the Developer, especially in large organisations with entrenched employees and HR. HR is on their side, no ifs, no buts. Not every Scrum Team works in a start-up environment. Having capacity in a Sprint is an excellent chance to let the Development Team focus on those engineering tasks without disrupting the Sprint Goal. ...a blight which affected the British Army for Combat Medics from 2000 until present. As the staff left and were not replaced, the remaining medics were sent on more frequent combat tours increasing their rate of sign-off leading to even MORE frequent tours for remaining Medics until the system collapsed and economic intervention was required at massive expense to the Government. As a Scrum Master you should spend time with the Developer and probe their motivations. Are they opposed to learning new skills? Do they feel uncomfortable? Does the organisation and the project allow punish failure? Do they feel pressured to work on new tasks? Do they have a line manager they report to discouraging a new skillset? Are they incentivised by user story completion? In summary, you shouldn't assign work but encourage the team to pull from the backlog in a considered manner. A user needs to take notes. Therefore we will create note-taking functionality and call that an Epic. That will take a Sprint. That is our Sprint Goal. We did that. Like many things in the world of project management; it depends. Typically you will find a healthy tension between engineering stories (best practice, refactoring etc) that the Development Team wish to implement and Feature stories which the PO pushes to have done. Not always, but it's common. Edit to Add I know this question is somewhat theoretical and a bit more heavy than the normal fare at SE.PM but I felt if anyone could crowd source the cost-benefit of such an approach it would be here. :-) Thanks to @MrHinsch for adding this as a risk. A developer split across two teams is likely to sacrifice quality for speed leading to a poorer overall product. Calculate your capacity of work per sprint in hours. All in all, I have a list of around 70 metrics (from code coverage to cycle times) I can track for a Feature Team but management should only be interested in a few that give stakeholder confidence. In the last few weeks we have embedded some of the key values, the necessary ceremonies and artefacts and begun to display real team cohesion and cross-skilling. There are multiple parts to your question so let's group them; The key is to use the managers effectively as the next level of blockage removal. Getting stories done now in mini silos does not mean the team are building resilience to get stories done in the future if one of the development team leaves / goes sick etc. Let me break your points down one at a time. As part of the audit and compliance for my company (PLC), any Agile Projects are treated as a normal Waterfall Projects for review purposes although run according to Scrum best practice. We don't interfere in the process, we simply treat them equally for compliance.