Update: As of version 1.0.57 (coming out later today) this is fixed. You can now scroll horizontally on code blocks or tap on them to view them in the bigger view, and a minor swipe up or down while you're scrolling the code block won't cause a "jump" movement. 

I had a test that said "if the user finishes a pull to refresh fling and the list has more than 0 items in it, show the empty state" and that callback was also getting triggered when an overscroll happened from the bottom (since the library can support pulling to refresh from there too), but I didn't realize that I meant "and the list HAS 0 items in it" not "has more than". Stack Overflow will go back to being agnostic in the next version update, thanks! Technical description follows for those inclined to read it. 

Originally viewing a question and answer page in our application looked like this: As of version 1.0.6 we don't do our black-flickering hack on devices that are running below version 4.1 of the OS. 

The "votes still needed" denominator will be removed from the close and delete post menu items on the next build (> rev 2013.3.27.896), as it was causing too many layout issues on sites. python - What IDE to use for Python? data-structures - What are the lesser known but cool data structures? .net - Most useful free .NET libraries? compiler - Learning to Write a Compiler vim - What is your most productive shortcut with Vim? This will be made better in the next build (> rev 2013.3.25.887): 

Spammers know what they're doing. I'm not going to leave spam on Stack Overflow so that I can be nice to spammers. I'm here to serve the rest of the community. Update: I went through and deleted all of the sock-puppet accounts that were used to create bounties won by this user. There were around 20 sock-puppet accounts (I lost count), and over 5000 points of bounty awarded. There were over 1000 points of free reputation gained (because the system adds a free 50 to every bounty), which I assume was the whole point of this experiment. 

You can still get this information in each item's tooltip: I delete a lot of spam accounts. If the only reason an account exists is to promote a site or product, I will delete it. If you were providing any actual content you would have been given a warning. We could try backfilling those "missing" votes, but they can't be mapped to any users that are still around and they'd effectively be a waste of storage for votes that will also never be able to be removed. We're talking millions of rows here. 

And even if we were to get around this by excluding comments created before a certain date... first of all, that doesn't entirely help either since votes can be cast long after the comment was posted. Secondly, doing this would up the time for the update queries to run and further increase the chances that we lock up the DB. P.S. Look on the bright side: if the user profile hadn't been nailed to the perch, it'd be pushing up the daisies! He was unsuspended manually by a moderator on Lifehacks. 

So. We're working on moving meta sites to a different URL scheme (*.meta.stackexchange.com) to get around this. It's a move that was planned earlier, but was held back by universal login... which is now functionally complete. Unfortunately, there's a bunch of other stuff going on at the same time, so this switch is unlikely to happen until late October. 

Thanks for letting us know. Should be fixed now. 

This is a result/side-effect of some changes Cloudflare made recently, but the fact of the matter is that we'd run into problems with HTTPS support on child meta sites eventually anyway: you can't have a wildcard in the middle of a cert, so meta.*.stackexchange.com could never be a thing and we're not about to start registering/maintaining 100+ certs. We may revisit network suspensions to lock them down further, but honestly, I'm not too worried about it. It's rare for a "real" user to get suspended network-wide, and if a particular community still feels they're welcome there... fine. Description: An application error occurred on the server. The current custom error settings for this application prevent the details of the application error from being viewed remotely (for security reasons). It could, however, be viewed by browsers running on the local server machine.