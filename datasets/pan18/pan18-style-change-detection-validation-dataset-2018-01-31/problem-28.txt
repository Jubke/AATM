With the people-orientation that the agile methods have, that it tends to refer to the relationships between stakeholders (within the Development Team, Development Team/Product Owner, Development Team/Scrum Master, Product Owner/stakeholders, Scrum Master/Product Owner). However, it could also refer to the relationships between the tools and processes (if the tools are helping or hindering the team's workflow), the processes and the people (if the process preventing people from being their most productive), or the people and the tools (if the people have the knowledge and skills to use the tools effectively). 

As far as combining the Scrum Master and a manager role, I think that can be done by the same person. In fact, if you look at Disciplined Agile Delivery, the role of Team Lead encompasses the things normally done by a Scrum Master. This is a case where Scrum doesn't necessarily address organizational needs. Organizations often need managers and leads to do things like growing a team (by being involved in recruiting and hiring efforts), longer term strategic planning and roadmapping, cross-team facilitation and planning, career development of team members, and so on. None of this is addressed in Scrum. As long as the team lead or team manager is supporting a self-organized team and facilitates these things rather than taking on all of these themselves (with the exception of maybe career development and 1:1s), I don't see this as a contradiction of the Scrum principles. However, if the team lead tries to direct the way the team works and doesn't facilitate learning and self-organization, that would go against the Scrum principles. 

By being at every event, I'm there to facilitate it. At standup, I can go to the defined location a few minutes early to make sure that screensharing and voice calling is set up if any team members are remote. I can set up to support meeting notes to capture decisions or questions. I can set up deployment of the software to facilitate myself or other members of the Development Team walking through a review. 

There is no conflict of interest between a role of "member of the Development Team" and "Scrum Master" being shared by the same person. 

In the end, don't worry about skewing velocity. It's all about using your time appropriately. Velocity normalizes over time. You might have deviations in different iterations, but your retrospectives can explain why it happened and what you are doing to correct it for the future. 

What this is suggesting is that you look at all factors of the sprint to find things that are going well (so that you can continue to do them or do them on other projects) and to find things that aren't going well (so you can correct them), even if that means looking beyond a single unit. 

The next concern is that the Scrum Master responsibilities do take away from development time. The organization must consider the tradeoffs. Although there are many advantages to the Scrum Master being on the Development Team, that does mean that the Scrum Master has to take on additional work and meet all commitments or that they need to plan for less development output from the Scrum Master. 

For each of these, I'd argue that a member of the Development Team is the best candidate. 

Now, just because you can use something other than points doesn't mean that it's necessarily a good idea. There are plenty of posts about the advantages to using points - see this question on Software Engineering Stack Exchange, this question on Project Management Stack Exchange, this post by Scrum, Inc., this post by Mountain Goat Software, and this post on Agile Buddha. However, estimating in hours is not a problem to doing Scrum, especially if it is working for your team. 

As far as managing QA on your project tracking system, it depends on what your team is comfortable with doing. In something like Kanban, when a developer feels that the feature is implemented and developer tested, it would get moved to QA. However, you might choose to only maintain a product backlog, a sprint backlog, and a set of completed items. In that case, it would remain in the sprint backlog until QA calls it "done", at which point it's moved to completed and you get your points. There might be some other system that your team develops that works better, as long as it makes sense for how you work and doesn't get in the way of everyone doing their job.