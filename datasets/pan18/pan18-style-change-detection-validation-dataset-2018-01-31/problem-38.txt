Question value, find a way to do it, do not limit yourself to the user story format. Find out what works for you for each different type of task. I would be fine with simple and clear tasks on my backlog as long as we can INVEST it. Keep a good balance between UI and Unit-tests, UI tests are harder to maintain and with a constant changing UI it might even get frustrating to update them. Make sure UI tests are written as maintainable as possible, have the team use patterns like PageObjects. Stop with the word commitment in context with estimations. One of the biggest Agile frameworks Scrum changed their text from commitment to forecast in 2011. Introducing Agile is a team culture shift according to the Agile Fluency Model. People blocking this culture shift should eventually be removed. I would discuss this with the person for a max period of 4-6 months. Discuss this aswell with upper-management and announce that not changing the culture is not an option. Make sure that it is clear what is expected from this person. Keeping people around with the wrong attitude is not worthwhile for both parties. This person will be happier in another company probably. On a side-note I am pretty worried by your words: Scrum expects cross-functional team members, when developers do not help with the testing part of product backlog items, then they are not cross-functional. Everyone should focus on getting work done, its a team effort. Also have a look at the definition of ready, which is used to check if user stories are ready to be picked up by the development team. It should include that the acceptance criteria have been written. So to answer your first question: Yes, everyone should be involved in the discussion. Everyone who will do a part of the work should estimate the whole story. A shared resource is indicative of poor management not investing in cross-functional training, not hiring needed resource, not incentivising staff to remain in the company, not promoting people to the roles they are aspiring to or not accurately forecasting the book of work for the year (or possibly all five). If your developer is split across multiple projects (let's assume all are Scrum) then they will be attending multiple stand-ups, sprint planning, retrospectives and reviews. That is not an efficient use of the time and it's unlikely the ceremonies will be in synch, they may even overlap forcing the developer to miss critical project context My process as Scrum Master I think that Sprint Planning is a fairly relaxed introduction to the new week and we plan on Mondays. I always ensure that I arrive with snacks and drinks for the team (cheese, doughnuts, gourmet coffee etc). Each participant is provided with an A4 sheet for making notes and also asking 4 questions. Feedback items eventually become part of the product backlog by either revising or adding new items in the backlog. These have to be prioritized by the Product Owner before the team pulls them into a Sprint/Iteration Backlog. So to answer your question: becomes one of the acceptance test of the first story: Here is what Roman Pichler has to say on Scrum Alliance, The product owner is required to: In case of stories being carried over to future sprints, the Scrum team should not be held responsible for stories which were not part of the sprint backlog to begin with. This is a lot of work for a PO which would require undivided attention. For highly aligned and high performance teams, Scrum Master role may need less amount of time but a PO will still have to spend similar amount of time regardless. PO has to prioritize the backlog (the what part) where as the team decides amount of work that can be delivered in each sprint (the how-much part). Similarly PO provides feedback on the sprint during sprint review meetings and decides to approve or reject the sprint which has been delivered by the team thus causing conflict of interest.