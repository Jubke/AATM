But it's way more likely that a general consensus will quickly be reached without forcing the question through the close-reopen-close-reopen cycle. 

[Reasons "borrowed" from your recent blog post] 

Now that you highlight comment-responses from the user who asked the question, I would like each user to see their own comments highlighted the same style that their own answers are already highlighted. I'm sure you can find the rare exception of abuse of this feature by a high-rep user, but those instances are easily caught if folks simply understand what the feature is for explicitly. My (simplified) version makes that clear by enforcing the use case of when it should be applied. It does assume good faith by our high-rep participants — I would hate to bar high-rep user from fixing threads they participate in — but this also avoids the blatant misuse of this feature when it is applied outside the purpose for which it was designed. But as it is implemented now, the "accepted answer" has nothing to do with the voting. It was never designed to tell you which answer is best or even if the answer is correct. It's easy to misunderstand that feature because of what the UI tells you, but the accepted answer is simply the answer that the original author found most useful in solving their problem. 

I know this isn't a sneaky scheme to take away our rights through the small print, but right now, technically, that seems to be exactly what it's doing. Unless there is some super powerful good legal reason for it that no one of us can think of, it needs to go. 

Seeing as the idea behind the public display of total votes you've cast is to encourage voting, is this really fair? A careers flair showing key data 

This functionality does not add anything dangerous that you can't do already. It just helps automate a terribly, terribly dreary task and this is needed! Let's face it: We have 4,000 new questions a day, and not enough users, time, nor the inclination to deal with every one on an individual basis. That includes comments about frequent mistakes in posts. Either we use an automated tool to deal with the most common patterns (like in PHP, the eternal "you are not escaping your mySQL data. Use prepared statements or escape your input using ....."), or many mistakes will simply go uncommented. When closing a question as a duplicate, the goal obviously is to find not just some identical question, but the one that has the best answer. W3Schools is a garbage web site, designed to rank high in search engines in order to show people ads. The site demonstrates that the quality of the actual content is entirely secondary to that goal. 

Its PHP MySQL tutorial contains a SQL injection hole to this day, at least since 2006. It is likely responsible for many, if not most, of the tens of thousands of users who show up on Stack Overflow with vulnerable, broken code. 

At the moment, I have the impression it has become customary to upvote the question as a sign for future closers that it contains a really great answer - at least that's what I do, lacking better ways. A lot of essentially mediocre, but highly voted questions support that assertion. That is not a good practice in the long run - targeting the good answers would be much better. I'm not especially fond of social networking, and I think most of it doesn't have a place on SO. But I'm starting to think this specific thing could be the right way to go in order to tell apart expert content from the 10000th dreary "how do I upload a file" question. 

[Reasons "borrowed" from your recent blog post] Preemptively protecting a question "just in case…" is essentially barring a certain class of users from participation where it is completely unnecessary. New users should NOT be barred from participation… unless there is cause. It is easy to visit StackOverflow every day and still "miss a day." StackOverflow's day starts at midnight (GMT). So my "StackOverflow day" starts at 8pm, my time (Eastern Time). So it is conceivable that I simply logged in one morning and didn't check back until much later the next day... technically "missing" a day-as-tracked-by-stackoverflow in between. A few months ago, I wrote a promising proposal called "An Objective Site Life Cycle" which accomplished about 90% of what you described above. It was ultimately pushed out in favor of splitting up the graduation process (baby steps), but the main tenet of this proposal was to present a completely objective and transparent process which listed exactly what communities would need to get to that next level (including things like starting an election, removing the 'beta' label, getting a custom design, etc, etc). It was a way to clearly convey: