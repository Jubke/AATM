In our department we have Business Requirement Specifications in addition to the Product Backlog. The answer here is unfortunately...maybe. How much software documentation is reasonable for an Agile Team to produce whilst working to fortnightly Sprints? Should Management provide advice? Possibly. Probably not but possibly. That gives you an approximate capacity for 21 hours of work * 8 days = 168 hours of work capacity. I hope I have provided sufficient detail for someone to answer or guide me in my learning. Have any writers touched on this aspect? Results I should also add that my approach, focussing more on the master part, has worked extremely well. We had to let one developer go (the team had lost all confidence in him) but everyone else has gelled and adopted a Scrum mindset. ...a blight which affected the British Army for Combat Medics from 2000 until present. As the staff left and were not replaced, the remaining medics were sent on more frequent combat tours increasing their rate of sign-off leading to even MORE frequent tours for remaining Medics until the system collapsed and economic intervention was required at massive expense to the Government. Personally, I feel that any benefits that arise from cramming all ceremonies into a single day would be eradicated by the severe drop in morale and concentration which would come from such a technique. https://www.infoq.com/news/2015/02/establishing-self-organized-team Scrum was originally designed for small cross-functional teams that had absolute minimal dependencies and could deliver value incrementally; improving as they went. What if I have concerns? Ultimately, we advocate that the only true metric for a Scrum team is working software. However, that sentiment is an aspiration and is not a mature response to the organisation funding your project which must be balanced alongside dozens or potentially hundreds of other initiatives competing for the budget allocated to your Scrum Team. However the SAP R/3 architects (separate) require detailed specifications regarding the Business Warehouse back end preparatory work. Therefore the Business Requirements Specification are produced although we have a more complex Product Backlog which we can draw upon for Task-Level Sprint Planning. It's simply a spectrum of effectiveness. When you are a part of two teams, you are a part of no team. The Scrum teams become ever closer and the switching developer is just considered "that person they need to include". Now imagine youâ€™re a programmer, trying to solve a problem what requires you to hold multiple items critical to both understanding and solving the problem. Next Imagine a PM, running over to your desk and asking the following. In the immediate instance I took the following actions Calculate your capacity of work per sprint in hours. I know some individuals on this forum may take issue with treating developers with such a hard line but in my experience not all team members respond to gentle encouragement to adopt a team spirit. People love change but some hate being changed. Decide how much of your sprint you are willing to sacrifice to BAU work. To help focus your delivery I suggest using the mantra We have month-long sprints with Planning sessions have decreased from 18 hours in total to lasting less than 6 hours (due to disagree and commit) and our stand-ups went from 41 minutes to 23 minutes on average. I would argue that you absolutely should have a detailed requirements document if any of the following are true You simply cannot deliver new change if business stakeholders continually want functionality repaired in the old system. Force people to make changes. Ideally, the Product Owner should be continually ordering and prioritizing the backlog so that development team members can see the highest value stories at the top. If a situation arises where the team have more capacity then they can simply call a quick meeting, review the backlog and select the stories they feel are most appropriate for the Sprint taking account of the Product Owners prioritization. Commitment to the Team Sit the entire team down including the warring developers and tell them that from now on the team will finish all discussions with the following mantra (In short - if they break something that is not theirs, they have some documentation to back up the process, intent and reasoning). It sounds to me like you are working in a business intelligence centre/role - am I wrong? There is an official answer which is supported by the Scrum Guide and will help you pass any number of Scrum exams but has little applicability in the real world of software development. All in all, I have a list of around 70 metrics (from code coverage to cycle times) I can track for a Feature Team but management should only be interested in a few that give stakeholder confidence. https://www.mountaingoatsoftware.com/blog/multiple-levels-of-done As part of the audit and compliance for my company (PLC), any Agile Projects are treated as a normal Waterfall Projects for review purposes although run according to Scrum best practice. We don't interfere in the process, we simply treat them equally for compliance.