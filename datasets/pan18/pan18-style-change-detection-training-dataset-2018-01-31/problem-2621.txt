Your first test is correct: The adverb "always" is - together with the negation "not" which modifies (negates) it - a constituent serving to modify the verb phrase (the being a result is modified w.r.t. time, namely that it is "not always" being one). Since the head of the constituent is the adverb "always", most syntacticians would call this constituent an adverbial phrase and locate it as an adjunction to the verb phrase. 4. sounds very weird to me; I'm not a native speaker though. Looks like the part starting with "always" was topicalised, i.e. moved to the front of the sentence to make it the sentence's topic (where the "not" is in focus). Might be that this information structuring legitimates such a construction, but it is at least very marked I'd say, since the adverb ("always") was detached from its negation ("not"), making it hard to reconstruct the constituent. 

While, taken precisely, an adverb phrase is something that contains a lexical adverb while an adverbial might (but not needs to) consist of something different, like a PP or an NP, their function is essentially the same: They modify the verb, the verb phrase, the sentence, sometimes adjectives, and in general anything which is not nominal. 

To be precise, all the time can not be an adverb since "adverb" is a word class but this phrase is not a single word. And you asked about the "kinds of words" (i.e. word classes), but you can not assign a word class to a phrase. Syntactically, this phrase, just like always or never (which are syntactically single-word phrases), functions as an adverbial, a phrase which modifies a verb or clause - but here we are at a different level, because this is a grammatical function, not a word class. 

Leaving aside the fact that it's my own fault that I know nothing about Dependency-Based Compostional Semantics1, constituency-based parse analyses map fairly easily to compositional semantics. I believe this claim applies equally well to deeper grammars (LTAG, HPSG, CCG, etc.) that are the intellectual children of the simple Phrase Structure Grammar. After all, the parse trees don't change much between one of these formalisms and another. 

The official documentation for PTB tags is this weird PostScript file; you might prefer this quickref. 

These are not two different types of parsing in HPSG (or anywhere else, AFAIK), but two (of the many) aspects of parsing with a rich grammar like HPSG. 

When you write down the semantic representation of a sentence (lambda calculus) you see that the determiner "consumes" the noun. Hence, it is the semantic head of a noun phrase. SEOP has a comprehensive overview of the phenomena that led to this, but Wikipedia is not bad either. 

Ok, I'll try to explain it in a simpler way. Since the question was about parameters, the implication is that the answer should be couched in generative syntax (its version popular in the 1980s). The basic tenet of generative syntax is that constituents are organized hierarchically. If you take A and B and put them together (Merge), one of them will be the head and the other its dependent . The head determines the morphosyntactic properties of the whole phrase {AB}; in other words, if A is the head and it is a noun, then the whole phrase {AB} will be a noun. In generative syntax functional heads are posited, too (besides obvious lexical heads). Functional heads may express tense (T), finiteness, mood, senternce function (interrogative, affirmative - C), negation (Neg) etc- there is a lot of variation there. They may be overtly expressed (like the past tense in English -ed) or covertly expressed (e.g., accusative on object NPs). Heads can be strong (trigger movement) or weak (don't trigger movement). Since they wanted to explain why adjectives can be used before as well as after nouns in some languages, they suggested there should be some functional head (between prenominal and postnominal adjectives) where a noun moves to. I don't remember who proposed it was the Num-head (Andrew Radford says it's Picallo 1991 and Ritter 1991). There is a really nice picture (74) on page 179 in Radford's textbook (2004) that explains it nicely. I'll try to upload it tomorrow.