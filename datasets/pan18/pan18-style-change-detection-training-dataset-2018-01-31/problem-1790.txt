Decidability is linked to the second meaning of completeness. The "underlying" f-o logic is complete (first sense) : i.e. it is able to prove all logical consequences of the axioms of the theory T. In other words, either the mind actually has a non-algorithmic and not fully “mechanizable” nature, or else there exist absolutely undecidable mathematical problems. But [Gödel's Theorems] don’t allow us to go further and conclude that the true disjunct is the first one. According to Gödel, then, what follows from [them], and especially from [the Second one], is that if our mind is a computing machine, it is one such that it “is unable to understand completely its own functioning.” It is enough to consider a truth assignment v such that: For most of "little bit complex" mathematical theories, this is not possible. Particularly relevant are the comments Gödel gave one of the prestigious Gibbs Lectures at the American Mathematical Society in 1951. Going back to decidability, why a complete theory is so ? In classical and intuitionistic logic, the Principle of Explosion is often a basic law of inference. See Christine Ladd-Franklin, “On the Algebra of Logic”, in Charles Sanders Peirce (editor), Studies in Logic (1883), page 17-on; see pages 61-62. reduces necessity to (logical) entailment. But the relation of entailment is basically the formalization of "logical necessity" : B necessarily follows from A iff A entails B (i.e. iff B is logical consequence of A). And also a contradiction is "defined" as a logical impossibility. We can rephrase the above assertion as : "when there is rain, there are clouds" and also with : "there is rain, only when there are clouds". A good exercise is to replace the "if..., then___" construction with a different one using "when". NO, completeness of first-order logic does not imply decidability. But we have also ¬P. Thus, we may conclude with Q. Wiki's entry deduces it from Disjunctive syllogism: is quite useless; "cannot be" means "impossible". Thus, necessity is simply the negation of the possibility of the negation, which is quite "standard" in modal logic, but only moves the problem one step back. This (negative) result concerns another aspect of intuitive "completeness" (in the sense of adequacy) : for a mathematical theory, like arithmetic or set theory, it is a reasonable expectation that the axioms (formalized with first-order logic) are able to "capture" all the mathematical truth expressible in that theory. Side comment : the proof is intuitionistically valid. We can read it as : if we assume the Law of Excluded Middle, then the conclusion follows. 2.2) Assume ¬R and derive Q from ¬R → Q and then derive Q ∨ R. Your fallacy regards the "basic property" of validity : Let assume some "technical" facts regarding Gödel's Incompleteness Theorems : 1) Assume R and derive Q ∨ R by ∨-intro, and it is done. Compare with propositional logic, where a valid formula is called a tautology (the negation of a tautology is called a contradiction : a formula which is always false). For detailed discussions of the so-called Lucas-Penrose arguments, see : ➀ Cumming, S. (2014) λ–Calculus and Type Theory, Lecture Course (Winter), UCLA. ➁ Heim, I., Kratzer, A. (1998) Semantics in Generative Grammar. where I'm using '+' instead of boldface '∨' (because bold and or don't seem to work well together here), and we're supposing that (3) is closed under uniform substitution. The '≡' symbol is a syntactical equivalence relation that says that whenever you have an expression of form 'φ ≡ ψ' with φ possibly containing metavariables in it and ψ in Lo, you can replace φ with ψ. For examples let's start with a demonstration of the closure under uniform substitution aspect. This sentence:                                                                      Application ⟨e,t⟩ is the type of intransitive verbs like "walks", "is red", and so on. The two types ⟨e⟩ and ⟨e,t⟩ are combined to give an expression of type ⟨t⟩, a boolean. The problem is that the concept horse should be a concept (a thing of type ⟨e,t⟩) and not an object (a thing of type ⟨e⟩), but because of Frege's commitment to (1), he's forced to say that the concept horse is actually an object and not a concept. Those unfamiliar with the strange notation shouldn't get uncomfortable, because once I present the interpretation of 'a', 'o' (and there are also 'e' and 'i' relations), Bocardo will obtain an intuitive meaning: 4) ∃xDx ∧ ∀x∀y((Dx ∧ Dy) → x=y) There is a dog, and any two things that are dogs are identical. Here "nothing" is defined as a property of properties, a second-order property. Its arguments are characteristic functions of sets, its values: truth-values. Using it, (1–2) can be analyzed as follows: