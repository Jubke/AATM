To collaborate better, and To fix your workflows In our experience, the visibility and the 'cross-tribe' view that Kanban provides, where you are able to easily see what various people in each function (tribe) is busy with, where they might be stuck and need help, etc. makes it an awesome team for people across functions to communicate better, collaborate better, help resolve issues and make task assignment (self-assignment with Pull) and resource balancing (thru WIP limits and the ability to see visually who is loaded how much) decisions more effectively. Kanban's very nature - at least Kanban Method, as defined by David Anderson - is to help you start with your current workflow - and then go from there to improving it gradually as you identify the problem areas - bottlenecks, WIP limit violations, resource overloading, etc. - and fixing them one by one. (In fact I recently blogged about this here in case you are interested - http://bit.ly/2n4frr8) That's a great question and a topic of much debate in Kanban communities! However, there are two aspects to this - one, what is your actual engineering practice when a defect is found during development (as opposed to production defects) and two, what is the way you want to model that on your Kanban board. There is a very nice blog post written by Kanban thought-leader Dr. Masa Maeda on this topic you might also be interested in looking at - http://blog.digite.com/how-to-handle-tickets-during-sprint-planning/ I just came across your question - I am not sure if you are still looking for an answer, but nevertheless, here goes. (Just as a background, I am the product owner in a Kanban product company - and have experience with product development within our organization using Kanban; as also talking to many application/ product dev teams, so my response comes from the lessons from all of that experience). A different alternative would be to define multiple swim lanes - one for each Client or each project. (The project disadvantage may be that depending on the number of projects you do at a time, you might end up with a huge board - AND - at the end of each project, you will have to re-label the board with another project's name. Since you might be doing repeat work for each client, it may be better to have client-specific swim-lanes. Depending on how often this happens, you could consider defining your Kanban board by 'class of service' - where you can use the Class of Services defined by David Anderson in his book: Kanban: Successful Evolutionary Change for your Technology Business. Firstly, it would be interesting to know some additional information - Of course, there are many options possible, including having some sort of a board hierarchy, where you might have a organization --> client --> project hierarchy of boards - some of which may be more easily doable with an electronic Kanban product if and when you are ready for it. (Electronic products will also provide you some cool things such as defining a standard set of tasks on a card for each workflow column - so that on a single card, you can define tasks and map them to social vs. development stages - and track them as the card moves from the left to the right side of the board.) The first one is, depending on the stage where an Issue or a Bug is reported, the User Story is moved back to the earliest Working stage (Design In-Progress or Dev in-Progress, for example) and reworked on to fix the Issue or Bug. A developer works on a feature - which may be modeled as a User Story or an Enhancement or a Change Request - and during its development lifecycle, issues or bugs may be found during various testing stages (unit, system, integration, etc.) as well as code reviews - and these issues may be captured/ reported as Defects or Bugs or Issues. Hope this helps! If you have any questions/ clarifications, I'd be happy to answer here or you can also reach me at mahesh@digite.com. Cheers! If you have any other questions on Kanban, I'd definitely recommend the book - and you can also find some great information on our website (David is an advisor to us) as well as our blog. But, start with simple and then go on to more sophisticated as you adopt Kanban more effectively. You might consider all of the classes of service - Standard (normal work), Expedited (customer or other interrupt driven work), Fixed-Delivery Date or Intangible (such as refactoring work) - or you could take a subset. A third alternative, which most medium/ large organizations use is to have a complete board for each project. The board remains active as long as the project is active and simply closed when the project is done. This is better suited if you use an electronic Kanban board OR if you have a few long running projects. Otherwise, if you use physical boards, you will end up in a situation where all your team members will be forced to make updates on multiple boards in multiple locations, which would be a real challenge! Even in an electronic Kanban situation, this may not be advisable if most of your people work on more than 2 projects at a time. (Ignore the actual labels in the picture below!)