The most common reasons people struggle to estimate that I've seen are: For quite a while now, we've not done sprint planning or story point estimation. Hopefully, with a relatively small team you're all located on the same premises. Hopefully all in the same area... If you've got an example of a 2, a 5, an 8 and a 13 point story, bring them to your estimation session. Hopefully it'll be easier to estimate along the lines of "it's definitely bigger than the 2 point story and smaller than the 13 point one." in which case it's either a 5 or an 8, pick what you feel is closest. For my team, we decided that Sprint Planning was done for three reasons: Backlog sessions - This is a 30 min slot each day (although only used on an 'as needed' basis) where the Product Owner introduces upcoming stories to the team. We then discuss them at a high level, identify where we may need spike or a technical design session to elaborate and decide if it is of a size we're willing to accept or if it needs breaking up (rule of thumb is do we think we can do it in a week). This replaces points 4, 5 and 6. Cycle time as a metric - Rather than measuring velocity, we just measure how long it takes for the average story to be completed. Monitoring this over time helps us identify when our story size/complexity is creeping up and also gives the PO scheduling information (if I have 5 things I want done and cycle time is 4 days, I should have them all in 20 days time). This replaces point 1. Book a retrospective with the team and talk through issues. Chances are, if you don't think things are working as well as they could be, other people feel the same way but might have very different takes on the reasons why. Getting everyone's input will mean people feel more invested in whatever path you take and will likely pick up problems you hadn't even thought of. Remember, the purpose of estimation isn't precision. You'll go too big sometimes and too small on other occasions, it all evens out over time. It can help to have some stories you've done previously available when you estimate to use as benchmarks. Get your product owner/business analyst to clarify before you accept the story! Forget what you have and start with a retrospective Scrum teams usually aim for between 5 and 9 people and I've found this works pretty well. Consider identifying two or three streams of work and having smaller teams focussing on these. That'll help keep standups shorter and more relevant to the people attending and improve communication between people in the teams (co-ordinating between 5 people is far easier than between 16!). Insufficient acceptance criteria Smaller stories are generally easier to get a feel for and less likely to involve multiple systems etc.