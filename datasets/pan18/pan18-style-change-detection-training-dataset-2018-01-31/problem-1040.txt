How about careers serving HTML snippets and JavaScript embeds for people to put into their own sites, CVs, and profiles? I agree a comment meme pointing to a web site is not the best way to educate users, nor the most objective. However, seeing as listing all the shortcomings of W3Schools in individual comments is not feasible, it's better than nothing. 

If the tone on SO is supposed to become friendlier, flagging should become a public process. It would help streamline the flagging itself, and flags cast by the community would show to the drive-by Googler that rude comments do get challenged around here. I agree that the current behaviour is surprising. One would expect a clean link behind a "link" button, not a referral. 

I agree - the filter should definitely be removed on Meta. The system was built to filter low-quality questions identified by downvotes. On Meta, Downvotes signify disagreement and not necessarily low quality, so users shouldn't be blocked just because they have downvoted contributions. There is no indication to fellow users that something has been flagged. Such an indication would encourage inspection of the comment, and signify there may actually be a chance to get the comment removed. Probably everybody who is very active on SO has experienced cases of random, serial upvoting as the expression of thanks from a (usually newbie) user. The pattern is usually 5 or more upvotes on your latest answers. There should be a proper permalink system to link to revisions. The GUID URLs are fugly, and they provide source code only - making them effectively useless for use in a publication. (Update: It is possible to link directly to propely formatted versions [yet still with fugly URLs]. See S.Mark's answer for details.) Whenever I browse a list of questions, highlight those questions that have been recommended by my followed users. (I haven't put much thought into how to implement this graphically - you get the drift.) With so many SE sites popping up, it would be a very useful feature. You mean one should automatically have an account on every Stack Exchange site that gets created? 

That means that we, who license content to Stack Exchange, are supposed to retain the rights to our own work, to publish it whichever other way we please, for example on our blog, without having to attribute Stack Exchange. 

The benefit for careers is obvious: You tie your users to your service even more closely; users have even more reason to keep their data up to date; the embeds drive potential employers to the site. 

That doesn't make sense to me. Either 

Does this make sense? Maybe it is too localized and rare, but it has happened to me three or four times in the last two weeks alone. You decide. Firstly, because of the gesture it represents. Remember, community moderators volunteer their time; and while I remember Jeff saying "there are no shit jobs on SO", some of the work surely is thankless sometimes. A grading system where dissatisfied users can zing the mod a -1 for an unpopular decision is not exactly something to make volunteering thrive. 

The possibility to have a list of community-curated comment templates, leading to overall higher quality - creating a good comment template (with a polite greeting, an explanation of the issue, and some helpful links) isn't completely trivial. (This would complement the existing functionality of having your own comment templates, not replace it.) 

The speeches are all roughly the same size except casperOne's, which IMO is definitely tl;dr. Instead of removing them altogether, I'm in favour length limiting the speeches. That limit can be pretty stringent - but some more information than just the names should be there. Any queueing you need to do, you can do on your own machine. To every user who is being followed (or every user), display a new link underneath every question, "Recommend". We need a mod for Counterstrike or whatever people play these days that can pull almost-closed questions through the API, populate the playing field with them, and cast the final close vote for every one that the user manages to shoot: