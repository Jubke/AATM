D = ((1 * OD) + (4 * ED) + (1 * PD)) / 6 One way of coming up with a rough estimate is to talk to someone who does have experience with the type of task you're facing. (The folks at Home Depot don't know me and they've never been in my basement, but they're surprisingly good at estimating how long it will take me to paint it, if I give them just a little bit of information.) If no one in your organization has any experience, you might need to hire a consultant. Source: Systems Analysis and Design Methods The margin of error is going to depend on your best-case and worst-case estimates. The text we're using in my Systems Analysis course gives the following formula for calculating most likely duration: The formula is simply a weighted average of your own estimates, so it's really only good for turning the range [worst case - best case] into a single numerical estimate. If your input estimates are only guesses then the output will be no better. The important thing to take away from the formula is that your margin of error can be very wide depending on your PD and OD values. Filter requirements and create scope. Decompose "nouns" to "verbs" (work needs to be done to implement "nouns"). Or, if we know, that 1) catching of one elephant will take for us 1 man-day 2) we still use shovel for digging, then we should estimate this "elephant" story to 1 SP? This suggestion sounds absolutely wrong to me. But I wrote it, because in my practice people use this option in most cases. SP (in my understanding, it's important note) is convenient because it is relative and not related with time. All estimates are based on comparison with common basis. But what if two stories have completely different bases? For simplicity, let's look for example that is not related with any specific area. Like digging a pit. Story Points (SP) is a good measurement, that allow to estimate User Stories. Estimate "verbs" considering risks. All is good with pit digging. But what if the next story is "catching of an elephant"? This fact allows them to lengthen the task completion time. I know that a task will take 12 working hours to complete, but in fact it has taken 2 working (16 hours) days. 2.In my project management software, should I write a developer's daily capacity time-6 or 7 hour instead of 8? I am about to give new estimations of a project delivery time, estimating iterations etc.. 1.Should I take hourly estimation in order to be more precise I know that distractions are necessary and very vital and I do not argue their existence. The main question is 'Is is right to extract this time while making estimations?' Besides development, developers spend much time on distractions. By distractions I mean everything(tea, coffee, chats,) not directly related to development and code writing. In this case, developers spend no more than 6 hour on code writing instead of 8. While giving estimations on task completion, developers always give daily estimation, not hourly.