Based on Mark's comments below, I do need to add as part of my answer here that building and maintaining an IMS is not for the faint of heart. It requires capability and resource commitment and you need to have someone who knows what they're doing run it for you. A large IMS can become very complex quickly and subject to error. When that error surfaces, you will lose stakeholder confidence in the tool and that is very hard to get back. Not only this, but even when correct, your team members will accuse it of being incorrect when it begins to exhibit bad news. This is a lot of work but necessary work. 

You need to build an integrated master schedule. You need to pull in all your separate projects' schedules into one schedule and link them. You can link the work packages from different projects directly or you can create major and minor milestones within a sub project and link those, or a combination. 

Part of your PM responsibilities is to build project capabilities that have redundancies and no single point of failure. This means you have capabilities that are running smoothly, predictably, and, if something unplanned happens, you can remove and replace the capability component--human in this case--and keep going with nothing more than a blip on your performance. 

The reality is, we all have key resources. Ideally, we would have none. Try to move in that direction. 

EDIT: Re. "Text book PM scenario..." It may very well be. Projects and ongoing operations rarely grow their capabilities much above level two of a five-level maturity scale. This is because most organizations do not know how. The only recourse is to rely on the heroic efforts of a few key resources, and if one of them leave, it sends a ripple effect across the organization. So my advice might be ideal and rarely achieved...so try anyway. 

The probabilistic distribution of any task is created by a plethora of random variables that can both favorably and unfavorably affect that task. Resource things make up some of those variables. These things include having less resources than planned, having a skill set gap you did not anticipate, and having a higher than normal attrition. Other things could also be favorable, like having an experienced team who are used to working together and have performed this task 20 times before. Most of these variables are considered stochastic where it is unwise and wasteful to try to chase and control. 

This is an organic risk of projects, i.e., it is always there, it has always been there, and it will always be there. Trying to dissect this and calculate some type of contingency or buffer is a HUGE waste of your time. 

How much shorter - again the general principle is to ask the worker, and then PERT the resulting estimates. See if you can get permission to do a timeboxed mockup of the new process and test it. If they're willing to grant you 40 hours for a mockup & test, you can give them real numbers. 

Summary and last thought. If you can get permission for one, then make sure you capture lessons learned statistics, etc. You want to finish with, "You gave me 40 hours to make this work; the resulting process will save you 1 hour a month, which will pay off in 3 years. Find me any other investment that will pay off that fast." or something like that. 

Security - this is a fascinating research area; I'd recommend you consult the Society for Information Risk Analysis - they have multiple ways to measure security. Most of their methodologies are too complex for simple needs, but they have given me a lot of ground for thought. There are a couple of common ways to measure security: 

Since we're talking about estimating, let me mention a couple of principles: * Methodology is more important than accuracy. I've (almost) never been questioned on an estimate if I provide the supporting methodology. THe one time I was questioned was when my estimate was 10**6 larger than the bosses estimate; I showed him the underlying methodology and offered to adjust any factor he found unreasonable. They went with my estimate. Build the spreadsheet identifying your assumptions and show the math.