2. Chinese whispers effect happens and requirements get lost/confused 4. The developers end up becoming project managers. Wrap the costs and benefits into a proper business case that provides context and high-level analysis for the decision makers. Don't forget to illustrate more than one option and definitely include "Do nothing" as one of those options. Work out how much benefit (usually in financial terms) the company will receive, over what timescale, through doing the project. Start by defining what the actual material issues are, not what you or the developers or the PM thinks are local working practise issues. It sounds like some resentment has built up- try and see past that to the actual problems. Then when you know what is actually wrong you can begin, as a company, a team and an individual to think about what needs to change to correct the situation. You verify the software requirements related to these criteria in the same way as you would verify the software requirements for any criteria; by replaying the documented software requirements back to the relevant personnel with responsibility for those items and working through any variations with them until you have arrived at an agreed set of requirements. Despite my disclaimer above, and taking the question and roles at face-value, I think there are a number of problems with the assumptions made here: There is no inherent reason why this is a problem. It can be a problem if the developers are not able to communicate effectively with the client(s) and this is often the case in the wider I.T. world. Note, I (hope I) am not stereotyping here- developers are goal oriented detail-people in the main, and often clients wish to talk at a more conceptual level with other agendas that developers do not perceive. Conversely clients often cannot discern the true meaning and consequence behind developers' technical questions. There are always exceptions on both sides and I have seen it work well, but it doesn't always. If there is a real need for clients and developers to communicate then it should be facilitated and managed by the PM. I don't mean they have to be the postman in-between the dialogue or present at every meeting, but they should manage when and how it happens and provide oversight to ensure the outcomes from the communications are mutually beneficial. What you have described is, possibly, a dysfunctional team maybe with an inexperienced or just downright rubbish PM, but maybe not. Work out how much something will cost the company. The best way to make a case for a project is using a cost benefit analysis. It seems to me that all these "problems" are actually symptoms. None of them on their own is an actual problem (except for point 2. which is a group failure as far as I can see). So what is the net result of these symptoms? Hopefully your business case will define in cold hard cash terms why the company should do what you propose. But be prepared for such an analysis to conclude that a ground-up rewrite will cost a significant amount of money and will not deliver significant additional revenue.