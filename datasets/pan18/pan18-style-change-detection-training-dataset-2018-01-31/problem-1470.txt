Thus, if a succession of timeout requests is made, as is the case in the code in the OP and in my answer, and the time delay value is the same for each one, then once that amount of time has elapsed all the timer handlers will be called one after another in rapid succession. You have to arrange for a distinct copy of "i" to be present for each of the timeout functions. You can give the function a name, even when you're creating the function as a value and not a "function declaration" statement. In other words: Firefox does not do this. I haven't tried Safari yet. Note also that the reason you probably should use the parameter passed in from jQuery instead of the "native" one (in Chrome and IE and Safari) is that that one (the parameter) is a jQuery wrapper around the native event object. The wrapper is what normalizes the event behavior across browsers. If you use the global version, you don't get that. Here is a trivial jsfiddle example, with the following jQuery code: The designers of IE do not agree. edit — yes, I've tried setting "text" instead of "html", and it doesn't help. Trying to set "innerText" without jQuery also doesn't work. edit — if, for a given element, you access via the dashed form before attempting the camel-case form, then it works (and that tells me that this is definitely a bug :-) I have this recollection of a "cssText" property, but now in the (mysteriously diminished; does anybody know what happened to the MSDN documentation site?) MSDN docs that only shows up as a part of the stylesheet API and not as a DOM element thing. Now consider that some other code may, for its own reasons that are totally independent of the checkbox-control widget, actually do things to the form that may include updating checkbox settings programmatically. In that case, that other widget code may want to use "triggerHandler()" to tell any widgets, "hey I've updated some stuff, so you might want to re-check the current status and adjust if necessary." edit — it occurs to me that I left out two facts of interest: edit ah no, it doesn't set up multi-valued parameters as arrays - you get repeats of the same name. Thus, the make-an-object code should look like this: edit — obviously, your own application can actively remove stuff if it decides it's too old. That is, you can explicitly include some sort of timestamp in what you've got saved, and then use that later to decide whether or not information should be flushed. Seems to be the same in 1.6.2 as in 1.6.3. (The form "image-x-offset" can be used to get the data, by the way.) Have you tried "serializeArray"? That gives you an array of names and values. You could turn that into an object if you wanted to: Simple demo page: http://gutfullofbeer.net/title.html (try it with IE 7 or 8 to see the little empty white box) edit fixed bogosity; thanks @Dancrumb Well any Javascript object functions sort-of like a "map" You can use backslash to quote "funny" characters in your jQuery selectors: The good browsers all work such that an empty "title" attribute for an element means, "don't bother to show a title flyover here". That makes sense, as a little white flyover with nothing in it (edit — or nothing but a space character) is, for most people, completely useless.