Adjusting scope within a Sprint is possible, but only with the full participation of the Product Owner. Changes to the Sprint Goal should trigger an Early Termination of the current Sprint and a return to Sprint Planning. How work enters the system. How work is prioritized, and by whom. How work will flow through the system. What work-in-progress (WIP) limits apply to the system. While agile methodologies encourage customer collaboration, they expressly do not allow assigning tasks to team members outside the agreed-upon process flow. This sounds like a great teachable moment for you to provide education to both your team members and your stakeholders about how the process works, and to remind them that they all agreed to it. Even if you're not making the mistakes I just outlined, please take some time to really consider why you are trying to trace capacity metrics to the individual level, rather than taking the team-based approach that underpins most agile methodologies. You may be surprised to find that doing so is unnecessary, and even counterproductive, in many circumstances. 

Your organizational process clearly needs work. Consider Scrum, Kanban, and the available scaled frameworks like SAFe or a Scrum-of-Scrums. There's no silver bullet, but almost any formal framework will be better than what the organization is doing now. 

Instead, make sure that backlog items are owned by the entire team, and that the team is working collaboratively to complete stories rather than sequentially or in parallel. In addition, backlog items should be as independent of one another as possible, so that the inability to complete one due to resource or time constraints doesn't "halt the line" for other backlog items as well. 

All forms of agility require that work flows through defined channels. Your post is tagged kanban so all new work should enter an agreed-upon input queue. Whether this queue is a ticketing system, a Product Backlog, or other artifact is unimportant. What is important is that there are formal agreements in place between the team and the organization about: 

Your Capacity Planning and Prioritization Processes Need Re-Engineering You appear to be attempting to solve the wrong problem by treating this as an individual-availability issue. This is most likely because you have a weirdly-matrixed organization that isn't based around project teams or team capacity planning, but apparently based on the notoriously unsuccessful "Is Joe busy right now?" methodology. 

More importantly, while you can use various techniques to estimate ideal hours available to the team, this will not give you good predictability regarding the amount of work you can do in a Sprint. Unless it's your very first Sprint, you're much better off using relative sizing (e.g. story points) and estimating how much work you'll be able to accomplish in any given iteration based on empirical data about how much work the team has been able to accomplish in the past. TL;DR Estimate your team's capacity as an aggregate range based on historical performance, rather than as a sum of the ideal hours available to each individual. Furthermore, you should carefully consider what you hope to accomplish with such a calculation, and determine whether a more agile approach to productivity and statistical estimation might not be a better fit. In addition, each project team should not be expected to context-switch without a visible and costly penalty to productivity. Your organization is clearly missing both a Product Owner for each project and a scaled framework that can prioritize work across multiple projects. As a result, everyone treats their personal priorities as the priorities, and when everything is a "top priority" then nothing gets done.