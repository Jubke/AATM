To make these pages more user-friendly, I've added a table of contents on the top. Each item in the TOC is an anchor link leading to the relevant section on the page. Where are the initial settings for an unrecognized element defined? A simple flex container with various flex items containing an image: Is there a standard method for handling HTML5 elements when using pre-HTML5 doctypes? Cool grid overlay feature in Firefox Sequences of whitespace are collapsed. HTML5: Permitted Values for ID & Class Attributes As of HTML5, the only restrictions on the value of an ID are: So the value can be all digits, just one digit, just punctuation characters, include special characters, whatever. Just no whitespace. This is very different from HTML4. More details in the spec: https://www.w3.org/TR/html/sec-forms.html#the-step-attribute I've used the example on the jQuery website as a guide but it doesn't work on the grid. I also read various related posts on this site, but to no avail. I must be missing something. A layout-neutral wrapping tag would be just what I need in such situations. So if you don't specify a type, the form will be submitted in all browsers, but not IE 7. Update: IE does it correctly. Google Chrome has the same problem. It depends on the method you send the form with. then in FF, the following happens: Any suggestions are highly appreciated. I would prefer an Open Source solution, but I am also open to proprietary solutions like ActiveX controls or Java Applets. (if this weren't the case, the inputDraw solution suggested by @Gregory would be 100% perfect.) With GET, there is a commonly agreed on limit of about 1-2 kilobytes, depending on browser and server limitations. This is not exactly what all the Flash-based uploaders do: They can use data from a form, but they do not provide possibilities to submit the form as is, what is what I'm looking for. I am looking for a (probably) Flash based upload function taken a step further. How do you go about this on the user interface side? Cool grid overlay feature in Firefox Where are the initial settings for an unrecognized element defined? CSS Grid with item dimensions undefined Grid Layout would be a perfect solution to your problem if the various heights of the content items could be pre-determined. All other requirements are well within Grid's capacity. All pages on my website have links to the following features: Otherwise, consider a JavaScript alternative. Twitter Solution I think Twitter has it right. They let users input all they want and highlight the excess text with a negative character count (and a colored background, which I don't need to have). They disable the submit button while the count is negative. Two notes about the second image: So what's so special about "#"? As a result, when items aren't the tallest in the row, white space remains, creating unsightly gaps. When the text below says that an attribute on an element maps to the dimension property (or properties), it means that if the element has an attribute set, and parsing that attribute's value using the rules for parsing dimension values doesn't generate an error, then the user agent is expected to use the parsed dimension as the value for a presentational hint for properties, with the value given as a pixel length if the dimension was an integer, and with the value given as a percentage if the dimension was a percentage. I have a large, PHP-based CMS that manages web pages. All items are organized in a tree structure. When I edit an item, the "back" button usually points to its parent item. So, the usual workflow is navigating through the tree. then in FF, the following happens: Is this normal Firefox behaviour? Any ideas what I can do? So if you don't specify a type, the form will be submitted in all browsers, but not IE 7. So my question is: Is there a valid, standards compliant way - an attribute of some sort - to store arbitrary data inside HTML tags, for further processing by JavaScript? In the source code, I would like to have each li on one line for easier debugging: It is as if Firefox first renders the background image at 100% width, centers it, and then notices that the body needs to be stretched to 1400px. I am dynamically generating a form that is split into multiple levels of tabs using HTML / JavaScript. It depends on the method you send the form with. With GET, there is a commonly agreed on limit of about 1-2 kilobytes, depending on browser and server limitations. Right now, the "history" ends at the last item so that when the user returns from the front-end view, the link to the original page is lost, and they have to search it by hand. (if this weren't the case, the inputDraw solution suggested by @Gregory would be 100% perfect.)