While there is nothing wrong with pointing out in a Sprint Retrospective that a user story was grossly underestimated and using the experience to improve the team's estimation and planning process next time around, the utility value of formally tracking the magnitude of the mis-estimation is zero. A Worked Example Let's say you're using Trello with the popular Scrum for Trello Chrome plugin. You might have a board like this: Velocity is a metric that converges towards a mean over time. As long as you continue to improve the estimation process, the accuracy of your velocity as a predictor of Sprint capacity will improve. The value of velocity is in its ability to predict capacity despite perturbations and periodicity, so there is almost never a good reason to retcon the results of an individual Sprintâ€”and in fact, numerous reasons not to do so! In my coaching practice the use of consumed points is considered a Scrum/Kanban anti-pattern. Story point estimates are invalid outside the estimation process itself, and have no utilitiy outside Sprint Planning or Release Planning. They should be treated as epehemeral values, and should be: The simplistic answer is that a project's velocity should only increase until the team has developed a stable, predictable cadence that can be maintained over time. There are a few caveats, of course, but it's a solid rule of thumb. Agile teams should be small enough, and Scrum Sprints short enough, that formal tracking of deviations from the planning estimate should not be necessary. As this data should never be used outside of a single Sprint time box, retaining this data beyond the time box is also unnecessary. Remember, the first half of Sprint Planning involves the participation of the Product Owner, so a contentious story estimate is a perfect opportunity to work hand-in-hand with the PO to re-scope or refactor stories which have potential issues. The PO can work with the team to split or rewrite stories, or re-prioritize the Product Backlog on-the-fly to swap in a different story that fits better within the current sprint.