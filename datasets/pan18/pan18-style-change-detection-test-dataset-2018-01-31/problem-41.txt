In either case you probably need to cope with: My advice would be to incorporate feedback delivered by PMs but avoid any direct rating of developers. If functional manager isn't all defensive when it comes to their people they should be able to deliver such feedback to people in a valuable way. Such approach however requires trust between pretty much everyone around: PM, a manager and a team member. PM trusts that their feedback will reach a developer. A manager trusts they get honest, straightforward, possibly fact-based, feedback. A developer trusts no one tries to run them down, etc. The range of tasks in such small projects depends much on what exactly you're working on. Depending on your organization's standards it may be a standard way that people are rated on a scale and if it is so I don't say you should avoid that at all cost. Do remember that PM's feedback is just a part of the whole judgment on one's work. Second, for someone who is looking for feedback, more feedback should be always better than less feedback. I mean, even when I don't fully agree with someone's opinion it can still be very valuable because it shows how others see my work and, arguably, what I can do to change their views. On the other hand please avoid any automatic measures, like a number of bugs, lines of code etc. It has nothing to do with feedback and it will only drive measured numbers down or up (depending on a goal) with no direct influence on quality, e.g. if you measure a number of submitted bugs, you may be pretty sure that people will stop submitting bugs; it doesn't say much about a project quality and even fogs your visibility more. Actually any method which involves discussion between three estimators should do well. A few ideas you might find useful: Basically a leader is a person who helps the rest of the team shine. It means they can use a potential of the team, i.e. find the right place for everyone, give them enough power to execute their tasks, give them enough freedom, etc. At the same time the leader tries to keep conditions possibly close to ideal for the team, i.e. defending the team from unfair attacks or destroying optimal work environment, isolating them from unnecessary buzz, removing obstacles all over the way, etc. Project management generally deals with planning and organizing a project and dealing with people and resources in a way which allows to reach project goals. Fourth, show consequences of not changing PM's attitude. If nothing else works I retreat to a discussion like this: if you don't set meaningful priorities or give us enough information how we should choose priorities we would end up choosing tasks mostly randomly, as we aren't equipped well enough to make reasonable choices. Is that what you want? In other words if everything is equally important, everything is equally unimportant as well. Specific tasks would depend on project's size and complexity and also on a specific method chosen as project management approach. Sometimes, even such argument doesn't change the approach and you basically have to deal with the situation by yourself, trying to make right decisions while facing insufficient information. You can consider good old escalation to someone higher in a pecking order - either your boss or PM's superior. Depending on a person it can help, although basically the discussion would look the same. The only difference would be person taking part in it would hold more power and more authority. As a rule of thumb: if results differ that much it is a clear signal people understand the issue differently, so if you want to get reasonable estimate you should get people at the same page in the first place and only then focus on getting some number which makes sense. Now they're starting to work on your new project but they aren't going to get engaged which means their lower performance and few options when any issues pop up. You can't get another team assigned. How to bring back their enthusiasm and engagement back? UPDATE: It looks like your client is your users so pretty much the previous point covers the subject. If the former is true there's a chance to convince the manager to change the attitude. You can start with Stephen Covey's sharpen the saw metaphor (and generally the whole 7 habits of highly effective people). As simple as that: if you never rest your performance will be decreasing over time so it's manager's business to give you some time to improve your skills. You can also try to show them how they lose competence in the team when they're losing people who can't work that way any longer. If nothing seems to work chances are good the manager is the latter type. One thing I want to stress is data should be meaningful, meaning it should be about this very team, in similar and comparable situation etc. It shouldn't be some made up information which just show what you want it to show. You have to believe in value of the data.