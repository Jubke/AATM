If there was a cog in your manufacturing machine that was well worn and slips and causes the rivets on your widget to be out of specs and tolerance levels, what would you do with the cog? 

There are a lot of drivers to performance issues including many you will not identify. In an almost knee-jerk fashion, we have a tendency to blame the human and overlook the many other drivers. We replace the human but then get the same or similar results. While you indicate they have "all" the necessary resources, I would suggest really analyzing your project capabilities from the total system of process & procedures, tools, skills of the human resources, and intellectual capital. I suggest this because of the word "all" and "always," which suggests perfection and we never really get to perfection, either perfectly great or perfectly poor. So it leads me to believe your assessment is biased against the individual developers. 

I think trying to separate risks and issues is a mistake and maybe we should approach this more as exceptional events. Sometimes we are tactical, sometimes strategic, sometimes both. 

Edit: I have found in facilitating risk working sessions that we end up in this ongoing argument as to whether an identified event is either a risk or issue. It comes down to how an individual was framing the event, either tactically or strategically. 

I have never maintained assumptions and dependencies logs because these are a source of risks. If an assumption is made, there is a risk that follows that and, keeping two logs, you would end up having the same exact event being tracked on two logs. Same for dependencies. 

EDIT: No one every performs with 100% success. Individual performance, even the hyper performers and superstars who walk among us, will bounce it in every now and again. I am not sure how you are measuring the 80% versus 100% but either way you must accept defects in work performance from everyone. Your PM capabilities, specifically your risk management and quality management processes, should be designed with that in mind such that the defect can be addressed before delivery and in some cases after. 

That said, if you rule out everything else and determine you have individuals who do not have the resident knowledge, skills, and abilities to perform, then you need to replace them. Unlike an operations where you may be compelled to "grow" a resource into a higher performer, on a project, you do not have that luxury of time, nor should a customer pay for that growth. If an enabler is under performing, replace and keep going. 

rbwhitaker: "but people aren't cogs...." This is the challenge, isn't it: treating people well, making them feel needed, wanted, valuable, while make the unpopular, non emotional decisions treating us human capability enablers exactly like tool enablers, system enablers, process enablers, money enablers...because that is exactly what we are. The hard, unpopular truth is companies, and their projects, do not exist so people have some place to go everyday. We are there to enable a capability, and we go away when we are no longer needed. We may not like how that sounds, but our feelings are not relevant. 

Tactically, you would treat the issues; strategically, you would mitigate the heart attack as well as plan for after the heart attack by way of contingency planning. Treating the issues and mitigating the heart attack are likely the exact same actions but, the way we approach it in projects, we have a tendency to over simplify this and attempt to treat these things separately, causing disagreement and argument and inefficiencies. We tend to lose sight of the bigger picture, I have found.