Another obvious application would be preventing visual-studio 2010 and the like. I have been advocating strongly for us to continue to call it C++0x even while others were ready to go to C++11. But now the standard has been approved by all the countries, and it is no longer a draft standard, I think it's time to switch the synonyms. It really is C++11 now. Herb Sutter: http://herbsutter.com/2011/08/12/we-have-an-international-standard-c0x-is-unanimously-approved/ If the tag truly belongs on the site, it applies to some questions on the site. Add it to some questions that exist; this will also create it. If it doesn't apply to any existing question, there's no reason to try to create it. But what would be cool is if it resulted in a question tagged com-interop 

Does this matter? I think it does. I'm trying to solve a com interop problem today and the huge quantity of com interop questions out there are making me mental. That is not a correct tagging. If a question is tagged both com and interop it's because it's about COM Interop and the OP didn't know about the com-interop tag. This means that my searches are much harder than they need to be. I recall we've had a lot of retagging posses looking for tags like 2010 and 7, created when people tried to type entire product names including version suffixes. If you really have a question about something in a particular book like "Learn You a Haskell," just put the book title in the question. 

The purpose of tags is to make things more categorically searchable. Why would someone want to do a search for a specific monetary amount using the tag system, and how would they go about doing that? It doesn't make sense; the tags are far too specific, and would be useless as search articles. 

I consider "Dev-Only" solutions like blacklisting the tag to be a last-resort proposition. Developers should spend most of their time on developing, not on tag support. Problem is, by the time these are caught, it is a real pain to fix them. The tag tools are entirely inadequate for dealing with them, because these tags are already being used in multiple contexts. 

Note that someone has already put tag wikis on model and activity to confine them to specific uses. 

Including general tags with highly specific ones is a commonly-used, generally-accepted practice, so including .NET with wcf-data-services is perfectly fine. I removed the games -> game synonym, and added games to the synonyms for game-development. That should clear up the specific problem you reported. 

My vote is for winrt. This is what Google says, and what everyone appears to be calling it. 

Questions asking for code must demonstrate a minimal understanding of the problem being solved. Include attempted solutions, why they didn't work, and the expected results in your question. 

Some words that clearly have more than one meaning are being used to tag questions very specifically. 

I'm not in favor of this use of tags. If it really belongs on ServerFault, can't I be trusted to figure that out on my own? If I had a way to change the activity tag only for those questions having the android tag, for example, I could clean it up quite easily. Also, titles are important. The title of your question suggests a mundane issue with Paypal API knowledge, and doesn't really get to the heart of your specific problem. Check out the edit I made to the title of your question, which states specifically what your problem is. intent instead of android-intent The more general tags like .NET and C# are meant to encompass a sub-community within the larger community. Many users favorite these tags so that they can focus on answering questions in their general area of expertise. 

In theory, yes. You can ask a bad question, put the new tag on it, and it will be created. Bjarne Stroustrup: http://www2.research.att.com/~bs/C++0xFAQ.html (he's kind of on the fence still but does say it's called C++11, just that he doesn't feel like rewording his FAQ yet) 

Then by all means add those as an answer. It's my contention that no such combination exists Unless someone else has taken up the torch and has been doing the edits, I think that removing the sponsorship did the trick. I'm actually a little surprised to see such a clear line. If someone knows exactly when it was removed and wants to compare to my edit history, I'd be interested in the time spans involved. Scott Meyers: http://scottmeyers.blogspot.com/2011/08/c11-feature-availability-spreadsheet.html I have been advocating strongly for us to continue to call it C++0x even while others were ready to go to C++11. But now the standard has been approved by all the countries, and it is no longer a draft standard, I think it's time to switch the synonyms. It really is C++11 now. Instead, update the tag wiki to point out that the new site exists. Subscribe to the tag and educate users. Remove it where necessary. In other words: let the community police this. If you are tired of doing this, then let someone else fill the breach for a while, you don't have to do this either. 

You could try and reconstruct rankings at specific points in time from the current data dump (on http://data.stackexchange.com) but since the dump doesn't contain deleted posts they would be (reasonable) estimates. This query could be a starting point, but you'd have to aggregate the votes manually rather than rely on the denormalised aggregate values. The rest of the tag use was very muddled. We had Symantec Ghost (both questions off-topic), Ghost-Installer, Friendly Ghost Language, ghosting (in the context of UIs), and anything unexplainable (ghost database constraints, ghost html tags appearing, etc.) 

Blacklisting is to be reserved for tags that have no place whatsoever on a site, but that keep coming back to life. mathematica is no such hard-to-kill zombie.