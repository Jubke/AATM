If we look at the Agile fluency model. The Scrum Masters would focus mainly on levels 1-2 and the Agile coaches on level 3-4. 

Most companies have a defined culture or core values. Suggested is to use your core values in the hiring process. I think the same goes for the firing process, fire to protect your core values. Just do it? doing is the best example. 

Currently we have three teams who start their two week sprint on Monday and end it on Friday. We have some team-members who have every Friday off. Planning sprint reviews on Thursdays or earlier is awkward, since the sprint is not yet done, or the whole Friday goes to "waste" on non functional tasks. 

TL;DR: Scrum doesn't provide for a lot of things, you need to figure out a way that works for your team and project. Make sure you write a couple of UI tests each iteration. This will make it easier to write end-2-end test for new functionality and defects in a later stage, certainly for defects that are hard to test in unit-tests. 

Scrum expects cross-functional team members, when developers do not help with the testing part of product backlog items, then they are not cross-functional. Everyone should focus on getting work done, its a team effort. 

You need three values to forecast a cost: Speed of the team, estimate from the team and the cost of the team. Leading to a formula like this: 

You have historical data about your team The only tool you have in Scrum to help this situation is your velocity. I believe you know your velocity - how many story points you do in a sprint -, check the product backlog and do planning on each user story. Using these two, you'll have an estimation on a possible delivery date. With this approach you have your focus and tracking. There is no need to talk about the progress of the idea during on a daily basis, but it can help a lot. Putting the created "idea tasks" into the Sprint Backlog with a different color can also help, but this trick is team dependent. In the first part, you do the idea collecting - nothing new here -, but in the second part you pick only one idea, which the team will implement during the next Sprint. In the third part, you do a planning meeting like session on how to implement that idea and bring the result - the tasks - to your Scrum board. It is highly recommended to timebox these parts so that you have enough time for the third part. If you don't have the improvements on your Scrum Board, they won't be visible, and this means that they don't exist (yes, you can have improvements on your Scrum board). Budgeting is an interesting question. A good Product Owner knows, that continuous improvements are crucial in Scrum - the framework is about continuous improvement - so it is not a question whether to have them or not. If you still have trouble, then you need to do more coaching and help people understand the importance of continuous improvements on each level. Doing them off the record is not a good idea, because then there is no real transparency any more, which eventually will lead to mistrust between the Product Owner and the Scrum Team. 

Alternative one, you can check your historical data and see how long did it take to deliver a similar app, check the risks you see and provide an estimation using this.