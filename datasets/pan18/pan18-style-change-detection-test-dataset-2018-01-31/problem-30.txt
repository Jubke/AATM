Minor tweaks are fine, but at some point you will need to be firm, charge the clients for them and make them aware how the changes will impact the delivery date. How can I convey this to my boss without getting to confrontational? Is he correct, and is the level of support that I am supposed to provide? Many clients do not care about this, and it only works extremely well when you're working in an environment or project that adopts this approach. Since Kanban is based on cycle time and not velocity it is perfect for delivering work where there are fixed deadlines. It is also agile, since any new requirement goes to the bottom of the backlog where delivery is done in a conveyer belt style way. I feel that since I am not hands on coding, the support that I can provide is limited, given that I cannot try different things out with the code. If I am required to start developing, than that is going beyond my job description. I have made it clear to my boss that I have no interest at all writing code again. I feel that at best I can point him in the right direction and give suggestions on how to solve the problem, but in the end, he has to find the solution. My boss doesn't seem to get that and expects me to hand hold him. 1) How to handle change requests 2) Use Kanban, not Scrum for external clients. I do not mind at all doing this, but I have expressed the following concerns: I am much more interested in project management activities, requirement gathering, optimising my sprints, organising my backlog, reading burn down charts, making sure scrum is followed properly and so on. Gathering Data and Gathering insights, seem the same as I cannot imagine some of these exercises would work if you did both a gathering data and generating insight exercise. I an an Agile Coach and Scrum Master for a development team. Does that make sense? Any thoughts? A couple of weeks ago the stories seemed to be too big i.e. they were dragging along / staying on the board for weeks. Some of the generating insight exercises require you too...gather data! Very confusing. Are people using both of these stages in retros? The PO has started to create more granular stories but now the opposite is occurring, there are too many code dependencies between different stories e.g. one dev pushes a story to done, another dev picks up the new story and its so tightly dependent that they both need to unpick the original code and or struggle to merge code. One of my teams is struggling with user story sizing. Any ideas would be greatly appreciated. I was thinking of first looking at artefacts and then associated a checklist with each eg epic, story, release and then definition of done for each of those. Any advice would be most welcomed! I am reading a book called Agile Retrospectives and the author suggests splitting retro's into 4 stages. Two of the stages seem so similar: I have only been working with this team for 3 weeks Team member has said that I have a boring approach to coaching the team and that the previous coach was more fun Team member speaks up and criticizes every single initiative I present to the team Team member questions everything and flails between arguments. She doesn't fight one particular point or point of view, she fights for the sake of fighting. Team member is not a team player and is unwilling to work as a team, very arrogant and always tells the team that she is always right. Team member is not professional at all. Other team members from other team members are difficult, but they are at least professional. I would use an analogy for this team. Imagine a bunch of football players who were not interested in playing a game of football, they just wanted to kick the ball around. Now add me, their coach. I am at odds as I presume this is my job to sort this out. Can anyone recommend a format for facilitating a definition of done meeting ie, a meeting to define the teams definition of done. Many clients do not care about this, and it only works extremely well when you're working in an environment or project that adopts this approach. 1) How to handle change requests I feel that at best I can point him in the right direction and give suggestions on how to solve the problem, but in the end, he has to find the solution. My boss doesn't seem to get that and expects me to hand hold him. I do not mind at all doing this, but I have expressed the following concerns: I am much more interested in project management activities, requirement gathering, optimising my sprints, organising my backlog, reading burn down charts, making sure scrum is followed properly and so on. As an agile project manager, I am currently working with one sub contractor, the problem that I am currently facing is that he is just not pulling his weight with not only doing the work but also answering technical queries, and my boss is expecting me to investigate and on a theoretical level solve the problem for him.